name: Build SyncMe app

on: [push]

jobs:
  # test_bump:
  #   name: Test Bumping
  #   runs-on: windows-2022   
  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v2

  #   - name: Bump apps version
  #     shell: pwsh
  #     run: ./src/SyncMe/bump_version.ps1


  # build_android:
  #   name: Pack SyncMe Android
  #   runs-on: windows-2022    

  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v2

  #   - name: Extract KEYSTORE secret to base64 file
  #     run: 'echo "${{ secrets.KEYSTORE }}" > syncmekeystore.b64'

  #   - name: Encode KEYSTORE file
  #     run: 'certutil -decode .\syncmekeystore.b64 syncmekeystore.keystore'

  #   - name: Move KEYSTORE file to Android directory
  #     run: 'move .\syncmekeystore.keystore ./src/SyncMe/SyncMe.Android/syncmekeystore.keystore'  

  #   - name: Add msbuild to PATH
  #     uses: microsoft/setup-msbuild@v1.1
  #     with:
  #       vs-version: '17.0'

  #   - name: Setup .NET Core SDK 6.0.x
  #     uses: actions/setup-dotnet@v1
  #     with:
  #       dotnet-version: |
  #         2.1.x
  #         6.0.x

  #   - name: Install dependencies
  #     run: nuget restore src/SyncMe/SyncMe.sln

  # - name: Bump apps version
  #   shell: pwsh
  #   run: |
  #       cd src/SyncMe
  #       .\bump_version.ps1

  #   - name: Build SyncMe.Android
  #     run: |
  #         MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=syncmekeyname /p:AndroidSigningKeyPass='${{ secrets.KEYSTORE_PASSWORD }}' /p:AndroidSigningKeyStore=syncmekeystore.keystore /p:AndroidSigningStorePass='${{ secrets.KEYSTORE_PASSWORD }}' .\src\SyncMe\SyncMe.Android\SyncMe.Android.csproj

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: SyncMe.apk
  #       path: ./src/SyncMe/SyncMe.Android/bin/Release/com.companyname.syncme.apk

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: SyncMe-Signed.apk
  #       path: ./src/SyncMe/SyncMe.Android/bin/Release/com.companyname.syncme-Signed.apk
    
    # - name: Build SyncMe.iOS
    #   run: |
    #     msbuild src/SyncMe/SyncMe.IOS/SyncMe.IOS.csproj /verbosity:normal /t:Rebuild /p:Platform=iPhoneSimulator /p:Configuration=Release  


  build_ios:
      name: Pack SyncMe iOS
      runs-on: macos-latest    

      steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install the Apple certificate and provisioning profile
        env:
          CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
          CERTIFICATES_P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$CERTIFICATES_P12" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$CERTIFICATES_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Setup .NET Core SDK 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            2.1.x
            6.0.x

      - name: Install dependencies
        run: nuget restore src/SyncMe/SyncMe.sln
      
      - name: Build SyncMe.iOS
        run: |
          msbuild src/SyncMe/SyncMe.IOS/SyncMe.IOS.csproj /verbosity:normal /t:Rebuild /p:Platform=iPhoneSimulator /p:Configuration=Release /p:BuildIpa=true
